# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle Create Release

env:
  APP_NAME: NGFF-Converter-GUI
  APP_VERSION: 1.0.0

on:
  push:
    branches: [ packaging ]

jobs:
  build:
    name: Package
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Run jpackage with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: jpackage
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Upload Mac pkg
      uses: actions/upload-artifact@v2
      with:
        path: ./build/jpackage/*.pkg
        name: ${{env.MAC_SAVEAS}}
        retention-days: 3
      env:
        MAC_SAVEAS: ${{env.APP_NAME}}-${{env.APP_VERSION}}-MacOS.pkg
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Upload Windows msi
      uses: actions/upload-artifact@v2
      with:
        path: ./build/jpackage/*.msi
        name: ${{env.WIN_SAVEAS}}
        retention-days: 3
      env:
        WIN_SAVEAS: ${{env.APP_NAME}}-${{env.APP_VERSION}}-win.msi
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
#  upload:
#    name: Create Release
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        id: create_release
#        uses: actions/create-release@v1
#        with:
#          draft: true
#          prerelease: true
#          release_name: ${{ github.ref }}
#          tag_name: ${{ github.ref }}
#      - uses: actions/download-artifact@v1
#        with:
#          name: ./*.pkg
#      - uses: actions/download-artifact@v1
#        with:
#          name: ./*.msi
#      - env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        uses: actions/upload-release-asset@v1
#        with:
#          asset_content_type: application/pkg
#          asset_path: /home/runner/work/davidstirling/bfconvert-gui2/*.pkg
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#      - env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        uses: actions/upload-release-asset@v1
#        with:
#          asset_content_type: application/msi
#          asset_path: /home/runner/work/davidstirling/bfconvert-gui2/*.msi
#          upload_url: ${{ steps.create_release.outputs.upload_url }}

