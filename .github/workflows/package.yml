# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Gradle Create Release

env:
  APP_NAME: NGFF-Converter
  APP_VERSION: 1.0.3

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Package
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Build blosc
      run: |
        cd c-blosc
        mkdir build
        cd build
        cmake ..
        cmake --build . --config Release
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Install bundler
      run: brew install dylibbundler
    - name: Run jpackage with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: jpackage
    - if: ${{ matrix.os == 'macos-latest' }}
      name: Upload Mac pkg
      uses: actions/upload-artifact@v2
      with:
        path: ./build/jpackage/*.pkg
        name: ${{env.MAC_SAVEAS}}
        retention-days: 3
      env:
        MAC_SAVEAS: ${{env.APP_NAME}}-${{env.APP_VERSION}}-MacOS.pkg
    - if: ${{ matrix.os == 'windows-latest' }}
      name: Upload Windows msi
      uses: actions/upload-artifact@v2
      with:
        path: ./build/jpackage/*.msi
        name: ${{env.WIN_SAVEAS}}
        retention-days: 3
      env:
        WIN_SAVEAS: ${{env.APP_NAME}}-${{env.APP_VERSION}}-win.msi
    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
  upload:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Windows installer
        uses: actions/download-artifact@v2
        with:
          name: ${{env.APP_NAME}}-${{env.APP_VERSION}}-win.msi
      - name: Download MacOS installer
        uses: actions/download-artifact@v2
        with:
          name: ${{env.APP_NAME}}-${{env.APP_VERSION}}-MacOS.pkg
      - name: Create release draft
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.msi
            *.pkg
          draft: true
          name: ${{env.APP_NAME}} - ${{env.APP_VERSION}}
          fail_on_unmatched_files: true
